syntax = "proto3";
package ptarmiganpb;
option go_package = "github.com/jrife/ptarmigan/transport/ptarmiganpb";

// Model definitions only here (to be used by other transports)
import "github.com/coreos/etcd/raft/raftpb/raft.proto";
import "gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;

message Error {
    enum ErrorCode {
        ErrNotFound = 0;
    }

    // Code must be one of the standard error codes
    ErrorCode code = 1;
    // Type can be used by a specific service to further discover what went wrong
    string type = 2;
    // Message can carry more detail on what the problem is
    string message = 3;
}

message Empty {
}

message Chunk {
    oneof chunk_data {
        bytes data = 1;
        raftpb.Snapshot metadata = 2;
    }
}

message RaftEntry {
    bytes data = 1;
    string association_id = 2;
}

message ObjectMetadata {
    string name = 1;
    map<string, string> labels = 2;
}

message StorageClass {
    ObjectMetadata metadata = 1 [(gogoproto.nullable) = false];
    StorageClassSpec spec = 2 [(gogoproto.nullable) = false];
    StorageClassStatus status = 3 [(gogoproto.nullable) = false];
}

message StorageClassSpec {
}

message StorageClassStatus {
}

message StorageHost {
    ObjectMetadata metadata = 1 [(gogoproto.nullable) = false];
    StorageHostSpec spec = 2 [(gogoproto.nullable) = false];
    StorageHostStatus status = 3 [(gogoproto.nullable) = false];
}

message StorageHostSpec {
    // A list of storage classes that this host provides
    repeated string storage_classes = 1;
    // A flag indicating whether or not this host can host raft replicas
    bool raft_host = 2;
    // Putting this here so I remember. We should use labels for availability zone indication
    string availability_zone = 3;
}

message StorageHostStatus {
}

message Store {
    ObjectMetadata metadata = 1 [(gogoproto.nullable) = false];
    StoreSpec spec = 2 [(gogoproto.nullable) = false];
    StoreStatus status = 3 [(gogoproto.nullable) = false];
}

message StoreSpec {
    // A reference to the storage class that this store belongs
    // to
    string storage_class = 1;
    // How many replicas should each partition have
    uint32 replication_factor = 2;
}

message StoreStatus {
}

message Partition {
    ObjectMetadata metadata = 1 [(gogoproto.nullable) = false];
    PartitionSpec spec = 2 [(gogoproto.nullable) = false];
    PartitionStatus status = 3 [(gogoproto.nullable) = false];
}

message PartitionSpec {
    // A reference to the store that this belongs to
    string store = 2;
    // A reference to the raft group that this is linked to
    string raft_group = 3;
    // The number of replicas for this partition.
    uint32 replication_factor = 4;
}

message PartitionStatus {
}

message Replica {
    ObjectMetadata metadata = 1 [(gogoproto.nullable) = false];
    ReplicaSpec spec = 2 [(gogoproto.nullable) = false];
    ReplicaStatus status = 3 [(gogoproto.nullable) = false];
}

message ReplicaSpec {
    // A reference to the partition that this belongs to
    string partition = 1;
    // A reference to the raft group replica that this is linked to
    string raft_group_replica = 2;
    // A reference to the storage host where this replica should reside
    string storage_host = 3;
    string storage_class = 4;
}

message ReplicaStatus {
    // A reference to the storage host where this replica actually resides
    string storage_host = 1;
}

message RaftGroup {
    ObjectMetadata metadata = 1 [(gogoproto.nullable) = false];
    RaftGroupSpec spec = 2 [(gogoproto.nullable) = false];
    RaftGroupStatus status = 3 [(gogoproto.nullable) = false];
}

message RaftGroupSpec {
    // A reference to the partition that this raft group is linked to
    string partition = 1;
    // The number of replicas for this raft group
    uint32 replication_factor = 2;
}

message RaftGroupStatus {
}

message RaftGroupReplica {
    ObjectMetadata metadata = 1 [(gogoproto.nullable) = false];
    RaftGroupReplicaSpec spec = 2 [(gogoproto.nullable) = false];
    RaftGroupReplicaStatus status = 3 [(gogoproto.nullable) = false];
}

message RaftGroupReplicaSpec {
    // A reference to the raft group that this belongs to
    string raft_group = 1;
    // A reference to the replica that this is linked to
    string replica = 2;
    // A reference to the storage host where this replica resides
    string storage_host = 3;
}

message RaftGroupReplicaStatus {
}
